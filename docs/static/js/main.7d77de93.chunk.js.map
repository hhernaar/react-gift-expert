{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAGMA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,MAOlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAyB/BZ,EAAYe,WAAa,CACrBd,cAAgBe,IAAUC,KAAKC,YAGpBlB,Q,QCvBAmB,EAXK,SAAC,GAAwB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAE/B,OACI,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAQF,EAAMG,IAAQJ,IAC3B,4BAAKA,Q,uBCWAK,EAjBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACNN,EADM,iDAC2CO,UAAWF,GADtD,+DAEOG,MAAOR,GAFd,cAENS,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAKgB,EAAIhB,GACTC,MAAQe,EAAIf,MACZC,IAAG,UAAGc,EAAIC,cAAP,aAAG,EAAYC,iBAAiBhB,QAT/B,kBAcLY,GAdK,4CAAH,sDC6BEK,EA1BC,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAEhB,ECHwB,SAAEA,GAE1B,MAA0BzB,mBAAS,CAC/B+B,KAAO,GACPO,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAW,WACNjB,EAASC,GACLiB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBT,KAAOY,EACPL,SAAU,SAEnB,CAAEb,IAEEc,EDZ0BK,CAAcnB,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAGrB,OACI,qCACI,6BAAMb,IAEJa,GAAW,mBAAGjB,UAAY,mCAAf,qBAEb,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GACR,OAAO,cAAE,EAAF,eAEEA,GADGA,EAAIhB,aEQzB2B,EAvBM,WAEjB,MAAoC7C,mBAAS,CAAC,gBAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAGA,OACI,qCACI,8CACA,cAAE,EAAF,CAAcA,cAAgBA,IAC9B,uBACA,6BAEQ+C,EAAWb,KAAK,SAAAR,GACZ,OAAO,cAAE,EAAF,CAA6BA,SAAaA,GAAxBA,Y,MCXjDsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d77de93.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( catgs => [ inputValue, ...catgs] );\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ( { id, title, url} ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n          <img src = { url } alt = { title }/>\r\n          <p>{ title }</p>  \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default GifGridItem;","\r\nconst getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=oHQaWTfuZz2XySZWk8TuPPOcBpFBh7tX`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url   \r\n\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};\r\n\r\nexport default getGifs;","import React from 'react';\r\nimport GifGridItem from '../components/GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p className = 'animate__animated animate__flash'>Loading</p> }\r\n\r\n            <div className='card-grid'>            \r\n                {\r\n                    images.map( img => {\r\n                        return < GifGridItem \r\n                            key = { img.id }\r\n                            { ...img } \r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react'\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    });\r\n\r\n    useEffect( () => {\r\n         getGifs( category )\r\n            .then( imgs => setState({ \r\n                data : imgs,\r\n                loading : false\r\n            }));\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n};","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    //const handleAdd = () => setCategories( catgs => [...catgs, 'HunterXHunter'] );\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            < AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            <ol>\r\n                { \r\n                    categories.map( category => {  \r\n                        return < GifGrid key = { category } category = { category } />\r\n                    }) \r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}